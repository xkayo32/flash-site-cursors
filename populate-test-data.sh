#!/bin/bash

echo "üöÄ POPULANDO DADOS DE TESTE ORGANIZADOS"
echo "========================================"
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# URL da API
API_URL="http://localhost:8180/api/v1"

# Obter token de admin
echo -e "${YELLOW}Fazendo login como admin...${NC}"
TOKEN=$(curl -s -X POST "$API_URL/auth/login" \
  -H "Content-Type: application/json" \
  -d '{"email":"admin@studypro.com","password":"Admin@123"}' | \
  python3 -c "import sys, json; print(json.load(sys.stdin).get('token', ''))")

if [ -z "$TOKEN" ]; then
    echo -e "${RED}‚ùå Erro ao fazer login. Verifique se o servidor est√° rodando.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Login realizado com sucesso${NC}"
echo ""

# ======================
# CRIAR CATEGORIAS
# ======================
echo -e "${BLUE}üìö CRIANDO CATEGORIAS ORGANIZADAS...${NC}"
echo ""

# Categorias principais (Disciplinas)
declare -a MAIN_CATEGORIES=(
  '{"name":"Direito","type":"subject","description":"Disciplinas jur√≠dicas"}'
  '{"name":"Portugu√™s","type":"subject","description":"L√≠ngua portuguesa e literatura"}'
  '{"name":"Matem√°tica","type":"subject","description":"Matem√°tica e racioc√≠nio l√≥gico"}'
  '{"name":"Inform√°tica","type":"subject","description":"Tecnologia e sistemas"}'
  '{"name":"Administra√ß√£o","type":"subject","description":"Gest√£o e administra√ß√£o p√∫blica"}'
)

# Array para armazenar IDs das categorias criadas
declare -A CATEGORY_IDS

for category in "${MAIN_CATEGORIES[@]}"; do
  NAME=$(echo "$category" | python3 -c "import sys, json; print(json.load(sys.stdin)['name'])")
  echo "Criando categoria: $NAME"
  
  RESPONSE=$(curl -s -X POST "$API_URL/categories" \
    -H "Authorization: Bearer $TOKEN" \
    -H "Content-Type: application/json" \
    -d "$category")
  
  ID=$(echo "$RESPONSE" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('data', {}).get('id', ''))" 2>/dev/null)
  
  if [ ! -z "$ID" ]; then
    CATEGORY_IDS[$NAME]=$ID
    echo -e "${GREEN}  ‚úÖ $NAME criada (ID: $ID)${NC}"
  else
    echo -e "${YELLOW}  ‚ö†Ô∏è  $NAME pode j√° existir${NC}"
  fi
done

echo ""

# Criar subcategorias para Direito
echo "Criando subcategorias para Direito..."
DIREITO_ID=${CATEGORY_IDS[Direito]}
if [ ! -z "$DIREITO_ID" ]; then
  declare -a DIREITO_SUBS=(
    '{"name":"Direito Constitucional","type":"topic","parent_id":"'$DIREITO_ID'","description":"Constitui√ß√£o Federal"}'
    '{"name":"Direito Administrativo","type":"topic","parent_id":"'$DIREITO_ID'","description":"Administra√ß√£o p√∫blica"}'
    '{"name":"Direito Penal","type":"topic","parent_id":"'$DIREITO_ID'","description":"C√≥digo Penal"}'
    '{"name":"Direito Civil","type":"topic","parent_id":"'$DIREITO_ID'","description":"C√≥digo Civil"}'
    '{"name":"Direito Processual","type":"topic","parent_id":"'$DIREITO_ID'","description":"Processo civil e penal"}'
  )
  
  for sub in "${DIREITO_SUBS[@]}"; do
    NAME=$(echo "$sub" | python3 -c "import sys, json; print(json.load(sys.stdin)['name'])")
    echo "  - $NAME"
    curl -s -X POST "$API_URL/categories" \
      -H "Authorization: Bearer $TOKEN" \
      -H "Content-Type: application/json" \
      -d "$sub" > /dev/null
  done
fi

# Criar subcategorias para Portugu√™s
echo "Criando subcategorias para Portugu√™s..."
PORTUGUES_ID=${CATEGORY_IDS[Portugu√™s]}
if [ ! -z "$PORTUGUES_ID" ]; then
  declare -a PORTUGUES_SUBS=(
    '{"name":"Gram√°tica","type":"topic","parent_id":"'$PORTUGUES_ID'","description":"Regras gramaticais"}'
    '{"name":"Interpreta√ß√£o de Texto","type":"topic","parent_id":"'$PORTUGUES_ID'","description":"Compreens√£o textual"}'
    '{"name":"Reda√ß√£o","type":"topic","parent_id":"'$PORTUGUES_ID'","description":"Produ√ß√£o textual"}'
    '{"name":"Ortografia","type":"topic","parent_id":"'$PORTUGUES_ID'","description":"Regras ortogr√°ficas"}'
  )
  
  for sub in "${PORTUGUES_SUBS[@]}"; do
    NAME=$(echo "$sub" | python3 -c "import sys, json; print(json.load(sys.stdin)['name'])")
    echo "  - $NAME"
    curl -s -X POST "$API_URL/categories" \
      -H "Authorization: Bearer $TOKEN" \
      -H "Content-Type: application/json" \
      -d "$sub" > /dev/null
  done
fi

# Criar subcategorias para Matem√°tica
echo "Criando subcategorias para Matem√°tica..."
MATEMATICA_ID=${CATEGORY_IDS[Matem√°tica]}
if [ ! -z "$MATEMATICA_ID" ]; then
  declare -a MATEMATICA_SUBS=(
    '{"name":"Matem√°tica Financeira","type":"topic","parent_id":"'$MATEMATICA_ID'","description":"Juros e investimentos"}'
    '{"name":"Racioc√≠nio L√≥gico","type":"topic","parent_id":"'$MATEMATICA_ID'","description":"L√≥gica proposicional"}'
    '{"name":"Estat√≠stica","type":"topic","parent_id":"'$MATEMATICA_ID'","description":"Probabilidade e estat√≠stica"}'
    '{"name":"Geometria","type":"topic","parent_id":"'$MATEMATICA_ID'","description":"Formas e medidas"}'
  )
  
  for sub in "${MATEMATICA_SUBS[@]}"; do
    NAME=$(echo "$sub" | python3 -c "import sys, json; print(json.load(sys.stdin)['name'])")
    echo "  - $NAME"
    curl -s -X POST "$API_URL/categories" \
      -H "Authorization: Bearer $TOKEN" \
      -H "Content-Type: application/json" \
      -d "$sub" > /dev/null
  done
fi

echo ""
echo -e "${GREEN}‚úÖ Categorias criadas com sucesso!${NC}"
echo ""

# ======================
# CRIAR CURSOS
# ======================
echo -e "${BLUE}üìñ CRIANDO CURSOS...${NC}"
echo ""

declare -a COURSES=(
  '{"title":"Direito Constitucional Completo","description":"Curso completo de Direito Constitucional","category":"Direito","subcategory":"Direito Constitucional","price":299.90,"duration_hours":120,"instructor_name":"Dr. Jo√£o Silva","level":"intermediate","is_published":true}'
  '{"title":"Direito Administrativo para Concursos","description":"Prepara√ß√£o completa para concursos p√∫blicos","category":"Direito","subcategory":"Direito Administrativo","price":249.90,"duration_hours":80,"instructor_name":"Dra. Maria Santos","level":"intermediate","is_published":true}'
  '{"title":"Portugu√™s para Concursos","description":"Gram√°tica e interpreta√ß√£o de texto","category":"Portugu√™s","subcategory":"Gram√°tica","price":199.90,"duration_hours":60,"instructor_name":"Prof. Carlos Lima","level":"beginner","is_published":true}'
  '{"title":"Matem√°tica Financeira Aplicada","description":"Conceitos e aplica√ß√µes pr√°ticas","category":"Matem√°tica","subcategory":"Matem√°tica Financeira","price":179.90,"duration_hours":40,"instructor_name":"Prof. Ana Costa","level":"intermediate","is_published":true}'
  '{"title":"Racioc√≠nio L√≥gico Descomplicado","description":"L√≥gica para concursos p√∫blicos","category":"Matem√°tica","subcategory":"Racioc√≠nio L√≥gico","price":159.90,"duration_hours":50,"instructor_name":"Prof. Pedro Oliveira","level":"beginner","is_published":true}'
  '{"title":"Inform√°tica B√°sica","description":"Conceitos fundamentais de inform√°tica","category":"Inform√°tica","subcategory":"","price":129.90,"duration_hours":30,"instructor_name":"Prof. Lucas Ferreira","level":"beginner","is_published":true}'
  '{"title":"Administra√ß√£o P√∫blica","description":"Princ√≠pios e pr√°ticas da administra√ß√£o p√∫blica","category":"Administra√ß√£o","subcategory":"","price":219.90,"duration_hours":70,"instructor_name":"Prof. Roberto Alves","level":"intermediate","is_published":true}'
)

for course in "${COURSES[@]}"; do
  TITLE=$(echo "$course" | python3 -c "import sys, json; print(json.load(sys.stdin)['title'])")
  echo "Criando curso: $TITLE"
  
  curl -s -X POST "$API_URL/courses" \
    -H "Authorization: Bearer $TOKEN" \
    -H "Content-Type: application/json" \
    -d "$course" > /dev/null
  
  echo -e "${GREEN}  ‚úÖ Curso criado${NC}"
done

echo ""
echo -e "${GREEN}‚úÖ Cursos criados com sucesso!${NC}"
echo ""

# ======================
# CRIAR FLASHCARDS
# ======================
echo -e "${BLUE}üé¥ CRIANDO FLASHCARDS...${NC}"
echo ""

declare -a FLASHCARDS=(
  # Direito Constitucional
  '{"front":"O que s√£o direitos fundamentais?","back":"S√£o direitos b√°sicos individuais, sociais, pol√≠ticos e jur√≠dicos previstos na Constitui√ß√£o Federal","type":"basic","category":"Direito","subcategory":"Direito Constitucional","difficulty":"easy","tags":["constitui√ß√£o","direitos"]}'
  '{"front":"Quais s√£o os poderes da Uni√£o?","back":"Executivo, Legislativo e Judici√°rio - independentes e harm√¥nicos entre si","type":"basic","category":"Direito","subcategory":"Direito Constitucional","difficulty":"easy","tags":["poderes","uni√£o"]}'
  '{"front":"O que √© cl√°usula p√©trea?","back":"S√£o dispositivos constitucionais que n√£o podem ser alterados nem por emenda constitucional","type":"basic","category":"Direito","subcategory":"Direito Constitucional","difficulty":"medium","tags":["constitui√ß√£o","cl√°usula p√©trea"]}'
  
  # Direito Administrativo
  '{"front":"O que √© licita√ß√£o?","back":"Procedimento administrativo para contrata√ß√£o de servi√ßos ou aquisi√ß√£o de produtos pelo poder p√∫blico","type":"basic","category":"Direito","subcategory":"Direito Administrativo","difficulty":"easy","tags":["licita√ß√£o","administra√ß√£o"]}'
  '{"front":"Quais s√£o os princ√≠pios da administra√ß√£o p√∫blica?","back":"Legalidade, Impessoalidade, Moralidade, Publicidade e Efici√™ncia (LIMPE)","type":"basic","category":"Direito","subcategory":"Direito Administrativo","difficulty":"easy","tags":["princ√≠pios","administra√ß√£o"]}'
  
  # Portugu√™s
  '{"front":"O que √© sujeito?","back":"√â o termo da ora√ß√£o que indica quem pratica ou sofre a a√ß√£o expressa pelo verbo","type":"basic","category":"Portugu√™s","subcategory":"Gram√°tica","difficulty":"easy","tags":["gram√°tica","sujeito"]}'
  '{"front":"Diferen√ßa entre mas e mais?","back":"MAS = conjun√ß√£o adversativa (por√©m). MAIS = adv√©rbio de intensidade (quantidade)","type":"basic","category":"Portugu√™s","subcategory":"Ortografia","difficulty":"easy","tags":["ortografia","gram√°tica"]}'
  
  # Matem√°tica
  '{"front":"F√≥rmula dos juros simples?","back":"J = C √ó i √ó t (Juros = Capital √ó taxa √ó tempo)","type":"basic","category":"Matem√°tica","subcategory":"Matem√°tica Financeira","difficulty":"easy","tags":["juros","matem√°tica"]}'
  '{"front":"O que √© proposi√ß√£o?","back":"√â uma senten√ßa declarativa que pode ser classificada como verdadeira ou falsa","type":"basic","category":"Matem√°tica","subcategory":"Racioc√≠nio L√≥gico","difficulty":"easy","tags":["l√≥gica","proposi√ß√£o"]}'
  
  # Inform√°tica
  '{"front":"O que √© CPU?","back":"Central Processing Unit - Unidade Central de Processamento, o c√©rebro do computador","type":"basic","category":"Inform√°tica","subcategory":"","difficulty":"easy","tags":["hardware","cpu"]}'
  '{"front":"Diferen√ßa entre RAM e ROM?","back":"RAM: mem√≥ria vol√°til de acesso aleat√≥rio. ROM: mem√≥ria somente leitura, n√£o vol√°til","type":"basic","category":"Inform√°tica","subcategory":"","difficulty":"medium","tags":["mem√≥ria","hardware"]}'
)

for flashcard in "${FLASHCARDS[@]}"; do
  FRONT=$(echo "$flashcard" | python3 -c "import sys, json; print(json.load(sys.stdin)['front'][:30])")
  echo "Criando flashcard: $FRONT..."
  
  curl -s -X POST "$API_URL/flashcards" \
    -H "Authorization: Bearer $TOKEN" \
    -H "Content-Type: application/json" \
    -d "$flashcard" > /dev/null
  
  echo -e "${GREEN}  ‚úÖ Flashcard criado${NC}"
done

echo ""
echo -e "${GREEN}‚úÖ Flashcards criados com sucesso!${NC}"
echo ""

# ======================
# CRIAR DECKS
# ======================
echo -e "${BLUE}üìö CRIANDO DECKS DE FLASHCARDS...${NC}"
echo ""

declare -a DECKS=(
  '{"name":"Direito Constitucional - B√°sico","description":"Conceitos fundamentais de Direito Constitucional","category":"Direito","subcategory":"Direito Constitucional","tags":["constitui√ß√£o","concursos"],"isPublic":true}'
  '{"name":"Administra√ß√£o P√∫blica - LIMPE","description":"Princ√≠pios da Administra√ß√£o P√∫blica","category":"Direito","subcategory":"Direito Administrativo","tags":["administra√ß√£o","princ√≠pios"],"isPublic":true}'
  '{"name":"Portugu√™s - Gram√°tica Essencial","description":"Conceitos b√°sicos de gram√°tica portuguesa","category":"Portugu√™s","subcategory":"Gram√°tica","tags":["gram√°tica","portugu√™s"],"isPublic":true}'
  '{"name":"Matem√°tica Financeira - F√≥rmulas","description":"Principais f√≥rmulas de matem√°tica financeira","category":"Matem√°tica","subcategory":"Matem√°tica Financeira","tags":["matem√°tica","finan√ßas"],"isPublic":true}'
  '{"name":"Racioc√≠nio L√≥gico - Introdu√ß√£o","description":"Conceitos introdut√≥rios de l√≥gica proposicional","category":"Matem√°tica","subcategory":"Racioc√≠nio L√≥gico","tags":["l√≥gica","racioc√≠nio"],"isPublic":true}'
  '{"name":"Inform√°tica B√°sica","description":"Conceitos fundamentais de hardware e software","category":"Inform√°tica","subcategory":"","tags":["inform√°tica","hardware","software"],"isPublic":true}'
)

for deck in "${DECKS[@]}"; do
  NAME=$(echo "$deck" | python3 -c "import sys, json; print(json.load(sys.stdin)['name'])")
  echo "Criando deck: $NAME"
  
  curl -s -X POST "$API_URL/flashcard-decks" \
    -H "Authorization: Bearer $TOKEN" \
    -H "Content-Type: application/json" \
    -d "$deck" > /dev/null
  
  echo -e "${GREEN}  ‚úÖ Deck criado${NC}"
done

echo ""
echo -e "${GREEN}‚úÖ Decks criados com sucesso!${NC}"
echo ""

echo "========================================="
echo -e "${GREEN}üéâ DADOS DE TESTE CRIADOS COM SUCESSO!${NC}"
echo "========================================="
echo ""
echo "Resumo:"
echo "  üìö Categorias principais: 5"
echo "  üìÇ Subcategorias: ~15"
echo "  üìñ Cursos: 7"
echo "  üé¥ Flashcards: 11"
echo "  üìö Decks: 6"
echo ""
echo "Acesse http://localhost:5273/admin/flashcards para testar os filtros!"
echo ""