#!/bin/bash

echo "üß™ TESTE DE SEPARA√á√ÉO DE DADOS - ADMIN vs ESTUDANTE"
echo "===================================================="
echo ""

# Verificar se o servidor est√° rodando
if ! curl -s http://localhost:5173 > /dev/null; then
    echo "‚ùå ERRO: Frontend n√£o est√° rodando em localhost:5173"
    echo "Execute: cd frontend && npm run dev"
    exit 1
fi

echo "‚úÖ Frontend rodando em http://localhost:5173"
echo ""

echo "üìã TESTES DE SEPARA√á√ÉO DE DADOS"
echo "================================"
echo ""

echo "1Ô∏è‚É£ TESTE DE ISOLAMENTO DE DECKS:"
echo "   a) Fa√ßa login como ADMIN (admin@studypro.com / Admin@123)"
echo "   b) V√° para: /admin/flashcards (gest√£o de decks)"
echo "   c) Anote quantos decks existem do admin"
echo "   d) DELETE todos os decks do admin"
echo "   e) Fa√ßa logout e login como ESTUDANTE (aluno@example.com / aluno123)"
echo "   f) V√° para: /my-flashcards (aba 'DECKS')"
echo "   g) ‚úì VERIFICAR: Decks do estudante devem PERMANECER intactos"
echo "   h) ‚úì VERIFICAR: Estudante n√£o deve ver decks que eram do admin"
echo ""

echo "2Ô∏è‚É£ TESTE DE ISOLAMENTO DE FLASHCARDS:"
echo "   a) Ainda como ESTUDANTE, v√° para aba 'FLASHCARDS'"
echo "   b) Anote quantos flashcards existem do estudante"
echo "   c) Fa√ßa logout e login como ADMIN"
echo "   d) V√° para: /admin/flashcards/cards"
echo "   e) Filtre por 'Autor: Estudante' (ou nome do aluno)"
echo "   f) DELETE todos os flashcards do admin (n√£o do estudante!)"
echo "   g) Fa√ßa logout e login como ESTUDANTE"
echo "   h) ‚úì VERIFICAR: Flashcards do estudante devem PERMANECER"
echo "   i) ‚úì VERIFICAR: Estudante n√£o v√™ mais flashcards que eram do admin"
echo ""

echo "3Ô∏è‚É£ TESTE DE CRIA√á√ÉO - ADMIN:"
echo "   a) Login como ADMIN"
echo "   b) V√° para: /admin/flashcards/cards/new"
echo "   c) Teste cria√ß√£o de cada um dos 7 tipos:"
echo "      üîµ B√ÅSICO - Teste exemplo autom√°tico"
echo "      üü¢ B√ÅSICO INVERTIDO - Teste com informa√ß√£o extra"  
echo "      üü° LACUNAS (Cloze) - Use: {{c1::Brasil}} √© um {{c2::pa√≠s}}"
echo "      üü£ M√öLTIPLA ESCOLHA - 4 op√ß√µes com explica√ß√£o"
echo "      üî¥ VERDADEIRO/FALSO - Com explica√ß√£o detalhada"
echo "      üü¶ DIGITE RESPOSTA - Com dica opcional"
echo "      üü† OCLUS√ÉO IMAGEM - Upload imagem + √°reas"
echo "   d) ‚úì VERIFICAR: Todos os tipos salvam corretamente"
echo "   e) ‚úì VERIFICAR: Admin pode definir status (p√∫blico/privado)"
echo ""

echo "4Ô∏è‚É£ TESTE DE CRIA√á√ÉO - ESTUDANTE:"
echo "   a) Login como ESTUDANTE"
echo "   b) V√° para: /student/flashcards/new"
echo "   c) Teste cria√ß√£o dos mesmos 7 tipos do admin"
echo "   d) ‚úì VERIFICAR: Interface id√™ntica ao admin"
echo "   e) ‚úì VERIFICAR: Estudante pode definir PRIVADO/P√öBLICO"
echo "   f) ‚úì VERIFICAR: Flashcards criados s√≥ aparecem para o estudante"
echo ""

echo "5Ô∏è‚É£ TESTE FUNCIONALIDADES ANKI COMPLETAS:"
echo "========================================="
echo "   CLOZE M√öLTIPLO:"
echo "   a) Crie flashcard tipo LACUNAS com: 'O {{c1::Brasil}} fica na {{c2::Am√©rica}} do {{c3::Sul}}'"
echo "   b) ‚úì VERIFICAR: Deve gerar 3 flashcards separados:"
echo "      - Card 1: 'O [___] fica na Am√©rica do Sul'"
echo "      - Card 2: 'O Brasil fica na [___] do Sul'"
echo "      - Card 3: 'O Brasil fica na Am√©rica do [___]'"
echo ""
echo "   IMPORT/EXPORT:"
echo "   c) Teste importa√ß√£o de arquivo .apkg"
echo "   d) Teste exporta√ß√£o em todos os formatos:"
echo "      - JSON: Estrutura completa dos dados"
echo "      - CSV: Formato tabular para planilhas"
echo "      - ANKI: Formato nativo Anki"
echo "      - .APKG: Pacote completo import√°vel"
echo ""
echo "   TIPOS ESPEC√çFICOS:"
echo "   e) ‚úì B√ÅSICO INVERTIDO: Deve criar automaticamente card reverso"
echo "   f) ‚úì M√öLTIPLA ESCOLHA: 4 op√ß√µes + explica√ß√£o da resposta"
echo "   g) ‚úì OCLUS√ÉO IMAGEM: √Åreas clic√°veis + respostas personalizadas"
echo "   h) ‚úì DIGITE RESPOSTA: Campo input + dica opcional"
echo ""

echo "6Ô∏è‚É£ TESTE DE PERMISS√ïES AVAN√áADAS:"
echo "=================================="
echo "   a) Login como ADMIN, crie flashcard PRIVADO"
echo "   b) Login como ESTUDANTE"
echo "   c) ‚úì VERIFICAR: Estudante N√ÉO v√™ flashcard privado do admin"
echo "   d) Admin cria flashcard P√öBLICO"
echo "   e) ‚úì VERIFICAR: Estudante V√ä flashcard p√∫blico do admin"
echo "   f) Estudante cria flashcard PRIVADO"
echo "   g) Login como ADMIN, filtre por autor do estudante"
echo "   h) ‚úì VERIFICAR: Admin V√ä flashcard privado do estudante (supervis√£o)"
echo "   i) ‚úì VERIFICAR: Admin N√ÉO pode editar flashcard do estudante"
echo ""

echo "7Ô∏è‚É£ TESTE DE DECK MANAGEMENT:"
echo "============================"
echo "   a) Estudante cria deck pessoal"
echo "   b) Estudante adiciona seus pr√≥prios flashcards ao deck"
echo "   c) ‚úì VERIFICAR: Estudante N√ÉO pode adicionar flashcards do admin"
echo "   d) Admin cria deck administrativo"  
echo "   e) ‚úì VERIFICAR: Admin N√ÉO pode adicionar flashcards do estudante"
echo "   f) ‚úì VERIFICAR: Cada usu√°rio s√≥ gerencia seus pr√≥prios decks"
echo ""

echo "üîç PONTOS CR√çTICOS DE VERIFICA√á√ÉO:"
echo "=================================="
echo "‚úì Isolamento total: dados do admin n√£o afetam dados do estudante"
echo "‚úì Cria√ß√£o funcional: ambos os usu√°rios criam todos os tipos"
echo "‚úì Permiss√µes respeitadas: privado/p√∫blico funcionando"
echo "‚úì Funcionalidades Anki: m√∫ltiplas oclus√µes, import/export"
echo "‚úì Interface consistente: mesmo padr√£o para admin e estudante"
echo "‚úì Supervis√£o admin: pode visualizar mas n√£o editar dados do estudante"
echo ""

echo "üéØ URLs DE TESTE:"
echo "================="
echo "üîß Admin Decks: http://localhost:5173/admin/flashcards"
echo "üîß Admin Cards: http://localhost:5173/admin/flashcards/cards"
echo "üîß Admin New: http://localhost:5173/admin/flashcards/cards/new"
echo "üìö Student Cards: http://localhost:5173/my-flashcards"  
echo "üìö Student New: http://localhost:5173/student/flashcards/new"
echo ""

echo "‚ú® EXECUTE ESTE ROTEIRO PASSO A PASSO PARA VALIDA√á√ÉO COMPLETA!"