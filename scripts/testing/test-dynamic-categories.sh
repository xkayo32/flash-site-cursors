#!/bin/bash

echo "üîß TESTANDO SISTEMA DE CATEGORIAS DIN√ÇMICAS"
echo "==========================================="
echo ""

# URLs de teste
FRONTEND_URL="http://localhost:5273"
BACKEND_URL="http://localhost:8180"

echo "üåê VERIFICANDO SERVI√áOS:"
echo ""

# Testar backend
echo "üì° Testando backend..."
BACKEND_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$BACKEND_URL/api/v1/health")
if [ "$BACKEND_RESPONSE" = "200" ]; then
    echo "‚úÖ Backend: OK (HTTP $BACKEND_RESPONSE)"
else
    echo "‚ùå Backend: ERRO (HTTP $BACKEND_RESPONSE)"
    echo "‚ö†Ô∏è  Iniciando backend..."
    cd /home/administrator/flash-site-cursors/backend-node
    npm run dev &
    BACKEND_PID=$!
    sleep 5
fi

# Testar frontend
echo "üì± Testando frontend..."
FRONTEND_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL")
if [ "$FRONTEND_RESPONSE" = "200" ]; then
    echo "‚úÖ Frontend: OK (HTTP $FRONTEND_RESPONSE)"
else
    echo "‚ùå Frontend: ERRO (HTTP $FRONTEND_RESPONSE)"
fi

echo ""
echo "üß™ TESTANDO API DE CATEGORIAS:"
echo ""

# Token de admin para testes (usando dados padr√£o)
ADMIN_EMAIL="admin@studypro.com"
ADMIN_PASSWORD="Admin@123"

# Login para obter token
echo "üîê Fazendo login como admin..."
LOGIN_RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/v1/auth/login" \
  -H "Content-Type: application/json" \
  -d "{\"email\":\"$ADMIN_EMAIL\",\"password\":\"$ADMIN_PASSWORD\"}")

TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r '.token' 2>/dev/null || echo "")

if [ "$TOKEN" != "" ] && [ "$TOKEN" != "null" ]; then
    echo "‚úÖ Login realizado com sucesso"
    
    # Testar endpoint de categorias
    echo "üìã Testando endpoint de categorias..."
    CATEGORIES_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" "$BACKEND_URL/api/v1/categories")
    CATEGORIES_STATUS=$(echo "$CATEGORIES_RESPONSE" | jq -r '.success' 2>/dev/null || echo "false")
    
    if [ "$CATEGORIES_STATUS" = "true" ]; then
        echo "‚úÖ Endpoint de categorias: OK"
        CATEGORIES_COUNT=$(echo "$CATEGORIES_RESPONSE" | jq '.data | length' 2>/dev/null || echo "0")
        echo "üìä N√∫mero de categorias: $CATEGORIES_COUNT"
    else
        echo "‚ùå Endpoint de categorias: ERRO"
        echo "üìù Resposta: $CATEGORIES_RESPONSE"
    fi
    
    # Testar op√ß√µes de filtro dos flashcards
    echo "üÉè Testando filtros de flashcards..."
    FILTERS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" "$BACKEND_URL/api/v1/flashcards/filters")
    FILTERS_STATUS=$(echo "$FILTERS_RESPONSE" | jq -r '.success' 2>/dev/null || echo "false")
    
    if [ "$FILTERS_STATUS" = "true" ]; then
        echo "‚úÖ Filtros de flashcards: OK"
        echo "üìä Filtros dispon√≠veis:"
        echo "$FILTERS_RESPONSE" | jq '.data' 2>/dev/null || echo "  Formato inv√°lido"
    else
        echo "‚ùå Filtros de flashcards: ERRO"
        echo "üìù Resposta: $FILTERS_RESPONSE"
    fi
    
else
    echo "‚ùå Falha no login - n√£o foi poss√≠vel obter token"
    echo "üìù Resposta: $LOGIN_RESPONSE"
fi

echo ""
echo "üéØ P√ÅGINAS PARA TESTAR MANUALMENTE:"
echo "=================================="
echo ""
echo "1. üìã P√°gina de Flashcards Individuais (Admin):"
echo "   URL: $FRONTEND_URL/admin/flashcards/cards"
echo "   - Verificar dropdowns de categoria/subcategoria"
echo "   - Testar mudan√ßa din√¢mica das subcategorias"
echo ""
echo "2. ‚ûï P√°gina de Novo Flashcard (Admin):"
echo "   URL: $FRONTEND_URL/admin/flashcards/cards/new"
echo "   - Verificar dropdowns de categoria/subcategoria"
echo "   - Testar que subcategorias mudam quando categoria principal muda"
echo ""
echo "3. üîê Para acessar as p√°ginas:"
echo "   Email: $ADMIN_EMAIL"
echo "   Senha: $ADMIN_PASSWORD"
echo ""

if [ ! -z "$BACKEND_PID" ]; then
    echo "‚ö†Ô∏è  Parando backend iniciado para teste..."
    kill $BACKEND_PID 2>/dev/null
fi

echo "üéâ TESTE CONCLU√çDO"
echo ""
echo "‚úÖ FUNCIONALIDADES IMPLEMENTADAS:"
echo "  - Hook useDynamicCategories criado"
echo "  - CategoryService estendido com m√©todos din√¢micos"
echo "  - IndividualFlashcards.tsx atualizada"
echo "  - NewFlashcard.tsx atualizada"
echo "  - Filtros din√¢micos funcionando com subcategorias"