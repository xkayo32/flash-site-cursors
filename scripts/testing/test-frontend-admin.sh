#!/bin/bash

# ========================================
# TESTE FRONTEND - TODAS AS P√ÅGINAS DO ADMIN
# ========================================
# Este script testa todas as URLs do frontend do administrador
# Verifica se as p√°ginas carregam corretamente e n√£o retornam erro 404

# Configura√ß√µes
BASE_URL="http://localhost:5273"
SUCCESS_COUNT=0
ERROR_COUNT=0
TOTAL_COUNT=0

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${CYAN}‚öôÔ∏è  TESTE FRONTEND - P√ÅGINAS DO ADMIN${NC}"
echo -e "${CYAN}=====================================${NC}"
echo -e "${BLUE}Base URL: ${BASE_URL}${NC}"
echo -e "${BLUE}Testando todas as rotas do administrador...${NC}"
echo ""

# Fun√ß√£o para testar uma URL
test_url() {
    local url="$1"
    local description="$2"
    local should_redirect="$3"
    
    TOTAL_COUNT=$((TOTAL_COUNT + 1))
    
    echo -n "[$TOTAL_COUNT] Testando: $description..."
    
    # Fazer requisi√ß√£o HTTP
    response=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL$url" 2>/dev/null)
    
    # Verificar resultado
    if [ "$should_redirect" = "redirect" ]; then
        # Para rotas protegidas de admin, esperamos redirect (302/301) ou acesso negado (401/403)
        if [ "$response" = "200" ] || [ "$response" = "302" ] || [ "$response" = "301" ] || [ "$response" = "401" ] || [ "$response" = "403" ]; then
            echo -e " ${GREEN}‚úì OK (HTTP $response)${NC}"
            SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
        else
            echo -e " ${RED}‚úó ERRO (HTTP $response)${NC}"
            ERROR_COUNT=$((ERROR_COUNT + 1))
        fi
    else
        # Para rotas p√∫blicas, esperamos 200
        if [ "$response" = "200" ]; then
            echo -e " ${GREEN}‚úì OK (HTTP $response)${NC}"
            SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
        else
            echo -e " ${RED}‚úó ERRO (HTTP $response)${NC}"
            ERROR_COUNT=$((ERROR_COUNT + 1))
        fi
    fi
}

# ========================================
# ROTAS PRINCIPAIS DO ADMIN
# ========================================
echo -e "${YELLOW}üè¢ DASHBOARD E GEST√ÉO${NC}"
test_url "/admin" "Admin (redirect para dashboard)" "redirect"
test_url "/admin/dashboard" "Dashboard administrativo" "redirect"
test_url "/admin/content" "Gerenciador de conte√∫do" "redirect"
test_url "/admin/settings" "Configura√ß√µes administrativas" "redirect"
echo ""

# ========================================
# GEST√ÉO DE USU√ÅRIOS
# ========================================
echo -e "${YELLOW}üë• GEST√ÉO DE USU√ÅRIOS${NC}"
test_url "/admin/users" "Lista de usu√°rios" "redirect"
test_url "/admin/users/new" "Criar novo usu√°rio" "redirect"
echo ""

# ========================================
# GEST√ÉO DE CURSOS
# ========================================
echo -e "${YELLOW}üìö GEST√ÉO DE CURSOS${NC}"
test_url "/admin/courses" "Editor de cursos" "redirect"
test_url "/admin/courses/new" "Criar novo curso" "redirect"
test_url "/admin/courses/edit/1" "Editar curso espec√≠fico" "redirect"
test_url "/admin/courses/1" "Visualizar curso espec√≠fico" "redirect"
echo ""

# ========================================
# GEST√ÉO DE QUEST√ïES
# ========================================
echo -e "${YELLOW}‚ùì GEST√ÉO DE QUEST√ïES${NC}"
test_url "/admin/questions" "Editor de quest√µes" "redirect"
test_url "/admin/questions/new" "Criar nova quest√£o" "redirect"
echo ""

# ========================================
# GEST√ÉO DE FLASHCARDS
# ========================================
echo -e "${YELLOW}üÉè GEST√ÉO DE FLASHCARDS${NC}"
test_url "/admin/flashcards" "Gerenciador de flashcards" "redirect"
test_url "/admin/flashcards/new" "Criar novo deck" "redirect"
test_url "/admin/flashcards/cards" "Flashcards individuais" "redirect"
test_url "/admin/flashcards/cards/new" "Criar novo flashcard" "redirect"
test_url "/admin/flashcards/deck1/edit" "Editar deck espec√≠fico" "redirect"
test_url "/admin/flashcards/deck1/cards" "Cards do deck espec√≠fico" "redirect"
test_url "/admin/flashcards/cards/card1/edit" "Editar card espec√≠fico" "redirect"
echo ""

# ========================================
# GEST√ÉO DE RESUMOS
# ========================================
echo -e "${YELLOW}üìÑ GEST√ÉO DE RESUMOS${NC}"
test_url "/admin/summaries" "Editor de resumos" "redirect"
test_url "/admin/summaries/new" "Criar novo resumo" "redirect"
test_url "/admin/summaries/edit/1" "Editar resumo espec√≠fico" "redirect"
echo ""

# ========================================
# GEST√ÉO DE LEGISLA√á√ÉO
# ========================================
echo -e "${YELLOW}‚öñÔ∏è  GEST√ÉO DE LEGISLA√á√ÉO${NC}"
test_url "/admin/legislation" "Gerenciador de legisla√ß√£o" "redirect"
test_url "/admin/legislation/new" "Criar nova legisla√ß√£o" "redirect"
echo ""

# ========================================
# GEST√ÉO DE SIMULADOS E PROVAS
# ========================================
echo -e "${YELLOW}üéØ GEST√ÉO DE SIMULADOS E PROVAS${NC}"
test_url "/admin/mock-exams" "Gerenciador de simulados" "redirect"
test_url "/admin/previous-exams" "Gerenciador de provas anteriores" "redirect"
echo ""

# ========================================
# GEST√ÉO DE CATEGORIAS
# ========================================
echo -e "${YELLOW}üè∑Ô∏è  GEST√ÉO DE CATEGORIAS${NC}"
test_url "/admin/categories" "Gerenciador de categorias" "redirect"
echo ""

# ========================================
# ROTAS INV√ÅLIDAS PARA ADMIN
# ========================================
echo -e "${YELLOW}‚ùå ROTAS INV√ÅLIDAS${NC}"
test_url "/admin/invalid-route" "Rota admin inv√°lida" "redirect"
test_url "/admin/users/999999/edit" "Editar usu√°rio inexistente" "redirect"
test_url "/admin/courses/999999/edit" "Editar curso inexistente" "redirect"
echo ""

# ========================================
# ROTAS DE ESTUDANTE (SEM PERMISS√ÉO)
# ========================================
echo -e "${YELLOW}üö´ ROTAS DE ESTUDANTE (SEM PERMISS√ÉO)${NC}"
test_url "/dashboard" "Dashboard do estudante (admin)" "redirect"
test_url "/courses" "Cursos do estudante (admin)" "redirect"
test_url "/flashcards" "Flashcards do estudante (admin)" "redirect"
test_url "/questions" "Quest√µes do estudante (admin)" "redirect"
echo ""

# ========================================
# RESUMO DOS RESULTADOS
# ========================================
echo -e "${CYAN}========================================${NC}"
echo -e "${CYAN}üìä RESUMO DOS TESTES${NC}"
echo -e "${CYAN}========================================${NC}"
echo -e "${GREEN}‚úÖ Sucessos: $SUCCESS_COUNT${NC}"
echo -e "${RED}‚ùå Erros: $ERROR_COUNT${NC}"
echo -e "${BLUE}üìã Total: $TOTAL_COUNT${NC}"

# C√°lculo da porcentagem de sucesso
if [ $TOTAL_COUNT -gt 0 ]; then
    SUCCESS_PERCENTAGE=$((SUCCESS_COUNT * 100 / TOTAL_COUNT))
    echo -e "${PURPLE}üìà Taxa de sucesso: ${SUCCESS_PERCENTAGE}%${NC}"
fi

echo ""

# ========================================
# NOTAS IMPORTANTES
# ========================================
echo -e "${YELLOW}üìù NOTAS IMPORTANTES:${NC}"
echo "‚Ä¢ Rotas protegidas de admin retornam 302/401/403 (esperado sem login)"
echo "‚Ä¢ Acesso de admin requer role='admin' no JWT"
echo "‚Ä¢ Frontend React roda em http://localhost:5273"
echo "‚Ä¢ Backend Node.js roda em http://localhost:8180"
echo "‚Ä¢ Para testar autenticado, fa√ßa login como admin primeiro"
echo ""

# ========================================
# FUNCIONALIDADES ADMIN TESTADAS
# ========================================
echo -e "${YELLOW}üõ†Ô∏è  FUNCIONALIDADES ADMIN DISPON√çVEIS:${NC}"
echo "‚Ä¢ Dashboard com estat√≠sticas completas"
echo "‚Ä¢ CRUD de usu√°rios (estudantes e admins)"
echo "‚Ä¢ CRUD de cursos com m√≥dulos e li√ß√µes"
echo "‚Ä¢ CRUD de quest√µes com categoriza√ß√£o"
echo "‚Ä¢ CRUD de flashcards (decks e cards individuais)"
echo "‚Ä¢ CRUD de resumos com editor avan√ßado"
echo "‚Ä¢ CRUD de legisla√ß√£o organizada"
echo "‚Ä¢ Gest√£o de simulados e provas anteriores"
echo "‚Ä¢ Gerenciamento de categorias e subcategorias"
echo "‚Ä¢ Configura√ß√µes administrativas"
echo ""

# ========================================
# COMANDOS √öTEIS
# ========================================
echo -e "${YELLOW}üîß COMANDOS √öTEIS:${NC}"
echo "‚Ä¢ Iniciar frontend: cd frontend && npm run dev"
echo "‚Ä¢ Iniciar backend: cd backend-node && npm run dev"
echo "‚Ä¢ Login admin: admin@studypro.com / Admin@123"
echo "‚Ä¢ Login estudante: aluno@example.com / aluno123"
echo "‚Ä¢ Testar APIs admin: ./test-admin-apis.sh"
echo ""

# ========================================
# ENDPOINTS BACKEND RELACIONADOS
# ========================================
echo -e "${YELLOW}üåê ENDPOINTS BACKEND RELACIONADOS:${NC}"
echo "‚Ä¢ GET /api/v1/users - Lista usu√°rios"
echo "‚Ä¢ GET /api/v1/courses - Lista cursos"
echo "‚Ä¢ GET /api/v1/questions - Lista quest√µes"
echo "‚Ä¢ GET /api/v1/flashcards - Lista flashcards"
echo "‚Ä¢ GET /api/v1/summaries - Lista resumos"
echo "‚Ä¢ GET /api/v1/legislation - Lista legisla√ß√£o"
echo "‚Ä¢ GET /api/v1/categories - Lista categorias"
echo "‚Ä¢ GET /api/v1/dashboard/stats - Estat√≠sticas admin"
echo ""

# Status final
if [ $ERROR_COUNT -eq 0 ]; then
    echo -e "${GREEN}üéâ TODOS OS TESTES PASSARAM!${NC}"
    exit 0
else
    echo -e "${RED}‚ö†Ô∏è  ALGUNS TESTES FALHARAM!${NC}"
    exit 1
fi