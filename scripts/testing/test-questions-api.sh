#!/bin/bash

# Test Questions API - Sistema de Quest√µes
# Testa todos os endpoints da API de quest√µes

API_URL="http://173.208.151.106:8180"
EMAIL="admin@studypro.com"
PASSWORD="Admin@123"

echo "üß™ TESTE - API DE QUEST√ïES"
echo "=================================="

# Step 1: Login to get token
echo "üîë Fazendo login..."
LOGIN_RESPONSE=$(curl -s -X POST "$API_URL/api/v1/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "'"$EMAIL"'",
    "password": "'"$PASSWORD"'"
  }')

echo "Login Response: $LOGIN_RESPONSE"

# Extract token
TOKEN=$(echo $LOGIN_RESPONSE | grep -o '"token":"[^"]*"' | cut -d'"' -f4)

if [ -z "$TOKEN" ]; then
  echo "‚ùå ERRO: N√£o foi poss√≠vel obter token de autentica√ß√£o"
  exit 1
fi

echo "‚úÖ Token obtido: ${TOKEN:0:20}..."
echo ""

# Step 2: List questions (with filters)
echo "üìã Listando quest√µes..."
curl -s -X GET "$API_URL/api/v1/questions" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" | jq '.'
echo ""

# Step 3: Get question statistics
echo "üìä Estat√≠sticas de quest√µes..."
curl -s -X GET "$API_URL/api/v1/questions/stats" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" | jq '.'
echo ""

# Step 4: Get filter options
echo "üîç Op√ß√µes de filtros..."
curl -s -X GET "$API_URL/api/v1/questions/filters" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" | jq '.'
echo ""

# Step 5: Get specific question
echo "üìñ Buscando quest√£o espec√≠fica (q1)..."
curl -s -X GET "$API_URL/api/v1/questions/q1" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" | jq '.'
echo ""

# Step 6: Create new multiple choice question
echo "‚ûï Criando nova quest√£o (M√∫ltipla Escolha)..."
NEW_QUESTION=$(curl -s -X POST "$API_URL/api/v1/questions" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Qual √© o √≥rg√£o m√°ximo do Poder Judici√°rio brasileiro?",
    "type": "multiple_choice",
    "subject": "Direito Constitucional",
    "topic": "Poder Judici√°rio",
    "difficulty": "easy",
    "options": [
      "Superior Tribunal de Justi√ßa",
      "Supremo Tribunal Federal",
      "Tribunal Superior do Trabalho",
      "Tribunal de Contas da Uni√£o"
    ],
    "correct_answer": 1,
    "explanation": "O Supremo Tribunal Federal √© o √≥rg√£o m√°ximo do Poder Judici√°rio e guardi√£o da Constitui√ß√£o Federal.",
    "exam_board": "CESPE",
    "exam_year": "2024",
    "exam_name": "Concurso P√∫blico - Teste",
    "reference": "CF/88, Art. 101",
    "tags": ["judici√°rio", "supremo", "stf"],
    "status": "published"
  }')

echo "$NEW_QUESTION" | jq '.'

# Extract question ID from response
NEW_QUESTION_ID=$(echo $NEW_QUESTION | jq -r '.data.id')
echo "Nova quest√£o criada: $NEW_QUESTION_ID"
echo ""

# Step 7: Create true/false question
echo "‚ûï Criando quest√£o Verdadeiro/Falso..."
TRUE_FALSE_QUESTION=$(curl -s -X POST "$API_URL/api/v1/questions" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "title": "O mandato do Presidente da Rep√∫blica no Brasil √© de 4 anos.",
    "type": "true_false",
    "subject": "Direito Constitucional",
    "topic": "Poder Executivo",
    "difficulty": "easy",
    "correct_boolean": true,
    "explanation": "Correto. O mandato presidencial √© de 4 anos, conforme art. 82 da CF/88.",
    "exam_board": "FCC",
    "exam_year": "2024",
    "tags": ["executivo", "mandato", "presidente"],
    "status": "published"
  }')

echo "$TRUE_FALSE_QUESTION" | jq '.'

# Extract question ID
TRUE_FALSE_ID=$(echo $TRUE_FALSE_QUESTION | jq -r '.data.id')
echo "Quest√£o V/F criada: $TRUE_FALSE_ID"
echo ""

# Step 8: Record answers for statistics
echo "üìù Registrando respostas para estat√≠sticas..."

# Answer the first question correctly
curl -s -X POST "$API_URL/api/v1/questions/q1/answer" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"is_correct": true}' | jq '.'

# Answer incorrectly
curl -s -X POST "$API_URL/api/v1/questions/q1/answer" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"is_correct": false}' | jq '.'

echo ""

# Step 9: Test filters
echo "üîç Testando filtros..."

echo "Filtrando por mat√©ria (Direito Constitucional):"
curl -s -X GET "$API_URL/api/v1/questions?subject=Direito%20Constitucional&limit=3" \
  -H "Authorization: Bearer $TOKEN" | jq '.data | length'

echo "Filtrando por tipo (multiple_choice):"
curl -s -X GET "$API_URL/api/v1/questions?type=multiple_choice&limit=3" \
  -H "Authorization: Bearer $TOKEN" | jq '.data | length'

echo "Filtrando por dificuldade (easy):"
curl -s -X GET "$API_URL/api/v1/questions?difficulty=easy&limit=3" \
  -H "Authorization: Bearer $TOKEN" | jq '.data | length'

echo "Busca textual (princ√≠pio):"
curl -s -X GET "$API_URL/api/v1/questions?search=princ√≠pio&limit=3" \
  -H "Authorization: Bearer $TOKEN" | jq '.data | length'

echo ""

# Step 10: Update question
if [ ! -z "$NEW_QUESTION_ID" ]; then
  echo "‚úèÔ∏è Atualizando quest√£o criada..."
  curl -s -X PUT "$API_URL/api/v1/questions/$NEW_QUESTION_ID" \
    -H "Authorization: Bearer $TOKEN" \
    -H "Content-Type: application/json" \
    -d '{
      "title": "Qual √© o √≥rg√£o m√°ximo do Poder Judici√°rio brasileiro? (ATUALIZADA)",
      "explanation": "O Supremo Tribunal Federal √© o √≥rg√£o m√°ximo do Poder Judici√°rio e guardi√£o da Constitui√ß√£o Federal. EXPLICA√á√ÉO ATUALIZADA."
    }' | jq '.'
  echo ""
fi

# Step 11: Bulk import test
echo "üì¶ Testando importa√ß√£o em lote..."
curl -s -X POST "$API_URL/api/v1/questions/bulk-import" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "questions": [
      {
        "title": "Complete: A Rep√∫blica Federativa do Brasil √© formada pela uni√£o _______ dos Estados, Munic√≠pios e Distrito Federal.",
        "type": "fill_blank",
        "subject": "Direito Constitucional",
        "topic": "Fundamentos da Rep√∫blica",
        "difficulty": "medium",
        "expected_answer": "indissol√∫vel",
        "explanation": "Art. 1¬∫ da CF/88: A Rep√∫blica Federativa do Brasil √© formada pela uni√£o indissol√∫vel dos Estados, Munic√≠pios e Distrito Federal.",
        "exam_board": "VUNESP",
        "exam_year": "2024",
        "tags": ["rep√∫blica", "federa√ß√£o", "uni√£o"],
        "status": "published"
      },
      {
        "title": "Disserta√ß√£o: Explique o conceito de Estado Democr√°tico de Direito previsto na Constitui√ß√£o Federal.",
        "type": "essay",
        "subject": "Direito Constitucional",
        "topic": "Estado Democr√°tico de Direito",
        "difficulty": "hard",
        "expected_answer": "O Estado Democr√°tico de Direito √© um conceito que combina elementos do Estado de Direito (supremacia da lei, separa√ß√£o dos poderes) com a democracia (soberania popular, participa√ß√£o). Significa que o poder emana do povo e deve ser exercido dentro dos limites legais.",
        "explanation": "Resposta deve abordar: conceito, elementos democr√°ticos, elementos do Estado de Direito, soberania popular, legalidade.",
        "exam_board": "CESPE",
        "exam_year": "2024",
        "tags": ["democracia", "estado direito", "soberania"],
        "status": "draft"
      }
    ]
  }' | jq '.'

echo ""

# Step 12: Final statistics
echo "üìä Estat√≠sticas finais..."
curl -s -X GET "$API_URL/api/v1/questions/stats" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" | jq '.'
echo ""

# Step 13: Try to delete question without answers
echo "üóëÔ∏è Tentando excluir quest√£o..."
if [ ! -z "$NEW_QUESTION_ID" ]; then
  curl -s -X DELETE "$API_URL/api/v1/questions/$NEW_QUESTION_ID" \
    -H "Authorization: Bearer $TOKEN" | jq '.'
fi

echo ""

# Summary
echo "‚úÖ TESTE CONCLU√çDO!"
echo "=================================="
echo "üîç Endpoints testados:"
echo "  ‚Ä¢ GET /api/v1/questions (listar com filtros)"
echo "  ‚Ä¢ GET /api/v1/questions/stats (estat√≠sticas)"
echo "  ‚Ä¢ GET /api/v1/questions/filters (op√ß√µes de filtros)"
echo "  ‚Ä¢ GET /api/v1/questions/:id (quest√£o espec√≠fica)"
echo "  ‚Ä¢ POST /api/v1/questions (criar quest√£o)"
echo "  ‚Ä¢ PUT /api/v1/questions/:id (atualizar quest√£o)"
echo "  ‚Ä¢ DELETE /api/v1/questions/:id (excluir quest√£o)"
echo "  ‚Ä¢ POST /api/v1/questions/:id/answer (registrar resposta)"
echo "  ‚Ä¢ POST /api/v1/questions/bulk-import (importa√ß√£o em lote)"
echo ""
echo "üìã Tipos de quest√£o testados:"
echo "  ‚Ä¢ multiple_choice (M√∫ltipla Escolha)"
echo "  ‚Ä¢ true_false (Verdadeiro/Falso)"
echo "  ‚Ä¢ fill_blank (Completar Lacunas)"
echo "  ‚Ä¢ essay (Dissertativa)"
echo ""
echo "üè∑Ô∏è Recursos testados:"
echo "  ‚Ä¢ Filtros (mat√©ria, tipo, dificuldade, busca)"
echo "  ‚Ä¢ Pagina√ß√£o"
echo "  ‚Ä¢ Estat√≠sticas e m√©tricas"
echo "  ‚Ä¢ Valida√ß√µes espec√≠ficas por tipo"
echo "  ‚Ä¢ Sistema de respostas e taxa de acerto"
echo "  ‚Ä¢ Importa√ß√£o em lote"
echo "  ‚Ä¢ Prote√ß√£o admin (CRUD)"